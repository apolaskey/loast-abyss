plugins {
    id 'java'
    id "org.springframework.boot" version "1.5.9.RELEASE" // :( Plugin versions are final in Gradle
    id "com.palantir.docker" version "0.17.2"
    id "com.palantir.docker-run" version "0.17.2"
}

group 'com.rustedshark'
version '0.0.1'

processResources {
    expand(project.properties)
}

repositories {
    mavenCentral()
}

configurations {
    compile.exclude module: "spring-boot-starter-tomcat" // Using Undertow
    compile.exclude module: "spring-boot-starter-logging" // Using Log4j2
    compile.exclude module: "tomcat-jbdc" // Using HikariCP
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:${gradle.ext.spring_version}")
    compile("org.springframework.boot:spring-boot-starter-websocket:${gradle.ext.spring_version}")
    compile("org.springframework.boot:spring-boot-starter-undertow:${gradle.ext.spring_version}")
    compile("org.springframework.boot:spring-boot-starter-log4j2:${gradle.ext.spring_version}")
    compile("org.springframework.boot:spring-boot-starter-actuator:${gradle.ext.spring_version}")
    compile("org.springframework.boot:spring-boot-starter-jdbc:${gradle.ext.spring_version}")
    compile("org.springframework.boot:spring-boot-starter-security:${gradle.ext.spring_version}")
    compile("org.springframework.boot:spring-boot-devtools:${gradle.ext.spring_version}")

    compile("javax.inject:javax.inject:1")

    compile("com.google.code.gson:gson:${gradle.ext.gson_version}")
    compile("com.google.guava:guava:${gradle.ext.guava_version}")

    compile("org.postgresql:postgresql:${gradle.ext.postgres_version}")
    compile("org.jdbi:jdbi3-core:${gradle.ext.jbdi_version}")
    compile("org.jdbi:jdbi3-sqlobject:${gradle.ext.jbdi_version}")

    compile("com.zaxxer:HikariCP:${gradle.ext.hikaricp_version}")

    compile ("com.vdurmont:emoji-java:${gradle.ext.emoji_version}")
}

bootRun {
    systemProperties = System.properties
}

docker {
    dockerfile project.file('.dockerfile')
    name "${gradle.ext.docker_repo}/rustedshark/lost-abyss:${gradle.ext.docker_tag}"
    files jar.archivePath
    buildArgs(['JAR_FILE': "${jar.archiveName}"])
}

dockerRun {
    name "local_lost-abyss"
    ports "8080", "8080"
    image "rustedshark/lost-abyss:latest"
    daemonize true
}

task startMud(type: GradleBuild) {
    tasks = ['dockerStop', 'dockerRemoveContainer', 'build', 'docker', 'dockerRun']
}

task stopMud(type: GradleBuild) {
    tasks = ['dockerStop', 'dockerRemoveContainer']
}